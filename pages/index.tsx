import { dehydrate, QueryClient, useQuery } from "@tanstack/react-query";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState } from "react";
import { Layout } from "../components/Layout";

import * as pexels from "../libs/pexels";
import styles from "../styles/Home.module.css";

const PER_PAGE = 10;

const Home: NextPage = () => {
  const router = useRouter();
  const [page, setPage] = useState(parseInt(String(router.query.page)) || 1);
  const { data } = useQuery(
    ["data", page],
    async () => await pexels.getCurated(page, PER_PAGE),
    {
      keepPreviousData: true,
      refetchOnMount: false,
      refetchOnWindowFocus: false,
    }
  );

  console.log(data);

  return (
    <div className={styles.container}>
      <Head>
        <title>Pexels Nextjs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <h1 className={styles.title}>Pexel + Next.js!</h1>
        <section className="grid-container">
          {data?.photos?.map((image: any) => (
            <article key={image.id}>
              <Image
                src={image.url}
                alt={image.alt}
                height={250}
                width={"100%"}
                loading="lazy"
              />
              <div className="text">
                <p>Name: {image.photographer}</p>
              </div>
            </article>
          ))}
        </section>
      </Layout>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  let page = 1;
  const queryClient = new QueryClient();

  if (context.query.page) {
    page = parseInt(String(context.query.page));
  }

  await queryClient.prefetchQuery(
    ["characters", page],
    async () => await pexels.getCurated(page, PER_PAGE)
  );

  return { props: { dehydratedState: dehydrate(queryClient) } };
};

export default Home;
